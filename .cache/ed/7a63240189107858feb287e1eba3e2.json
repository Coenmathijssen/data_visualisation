{"id":"../node_modules/array-union/index.js","dependencies":[{"name":"/Users/coenmathijssen/Documents/CMD-3/Data visualisation/Final_project/data_visualisation/package.json","includedInParent":true,"mtime":1579369944693},{"name":"/Users/coenmathijssen/Documents/CMD-3/Data visualisation/Final_project/data_visualisation/node_modules/array-union/package.json","includedInParent":true,"mtime":1579369944020}],"generated":{"js":"'use strict';\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nmodule.exports = function () {\n  var _ref;\n\n  return _toConsumableArray(new Set((_ref = []).concat.apply(_ref, arguments)));\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/array-union/index.js","original":{"line":1,"column":0}},{"name":"module","generated":{"line":11,"column":0},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":6},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":6}},{"name":"exports","generated":{"line":11,"column":7},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":7}},{"generated":{"line":11,"column":14},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":0}},{"generated":{"line":11,"column":17},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":17}},{"generated":{"line":11,"column":29},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":36}},{"generated":{"line":12,"column":0},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":36}},{"generated":{"line":14,"column":0},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":1}},{"generated":{"line":14,"column":28},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":12}},{"name":"Set","generated":{"line":14,"column":32},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":16}},{"generated":{"line":14,"column":35},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":12}},{"generated":{"line":14,"column":36},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":20}},{"name":"concat","generated":{"line":14,"column":48},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":23}},{"generated":{"line":14,"column":54},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":20}},{"generated":{"line":14,"column":77},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":12}},{"generated":{"line":14,"column":78},"source":"../node_modules/array-union/index.js","original":{"line":4,"column":1}},{"generated":{"line":15,"column":0},"source":"../node_modules/array-union/index.js","original":{"line":5,"column":1}},{"generated":{"line":15,"column":1},"source":"../node_modules/array-union/index.js","original":{"line":3,"column":0}}],"sources":{"../node_modules/array-union/index.js":"'use strict';\n\nmodule.exports = (...arguments_) => {\n\treturn [...new Set([].concat(...arguments_))];\n};\n"},"lineCount":null}},"error":null,"hash":"fdeff8ebe48b82990520461e638c6995","cacheData":{"env":{}}}